/** 
This file is part of LOVE-frontend.

Copyright (c) 2023 Inria Chile.

Developed by Inria Chile.

This program is free software: you can redistribute it and/or modify it under 
the terms of the GNU General Public License as published by the Free Software 
Foundation, either version 3 of the License, or at your option) any later version.

This program is distributed in the hope that it will be useful,but WITHOUT ANY
 WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR 
 A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with 
this program. If not, see <http://www.gnu.org/licenses/>.
*/

.container {
  margin-left: 10px;
  margin-right: 10px;
}

.title {
  color: white;
  font-weight: bold;
  text-align: left;
  font-size: 15px;
  margin-bottom: var(--small-padding);
}

.returnToLogs {
  display: flex;
  padding-right: 0.5em;
  justify-content: flex-end;
}

.detailContainer {
  background-color: var(--second-tertiary-background-color);
  color: var(--base-font-color);
  border: 1px solid hsl(199, 43%, 16%);
  border-radius: 6px;
  display: grid;
  grid-template-rows: auto minmax(180px, auto) auto;
  box-sizing: border-box;
  margin-left: 15px;
  margin-right: 15px;
  container: content / inline-size;
}

.header {
  font-weight: bold;
  text-align: left;
  font-size: 15px;
  margin-top: 5px;
  margin-left: 7px;
  margin-right: 7px;
  margin-bottom: 7px;
  padding-left: 3px;
  padding-right: 3px;
  border-bottom: 2px solid var(--secondary-font-color);
  color: var(--secondary-font-color);
  min-height: 1.9em;
}

.content {
  --grid-layout-gap: 5px;
  --grid-column-count: 2;
  --grid-item--min-width: 640px;

  --gap-count: calc(var(--grid-column-count) - 1);
  --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
  --grid-item--max-width: calc((100% - var(--total-gap-width)) / var(--grid-column-count));

  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(max(var(--grid-item--min-width), var(--grid-item--max-width)), 1fr));
  grid-row: auto;
}

.contentMenu {
  padding: var(--content-padding) calc(1.5 * var(--content-padding));
}

.twoColumn {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-row: auto;
}

.detail {
  display: grid;
  grid-template-columns: 1fr 2fr;
  grid-auto-rows: max-content;
  grid-row-gap: 1em;
  padding-top: 15px;
  margin-left: var(--content-padding);
}

.description {
  background-color: var(--second-quaternary-background-color);
  border-radius: 6px;
  display: flexbox;
  margin: 7px;
  padding: var(--content-padding);
  margin-right: 0;
}

.footer {
  display: flex;
  flex-flow: row;
  flex-direction: row;
  padding-top: var(--content-padding);
  margin: var(--small-padding) var(--content-padding);
  border-top: 2px solid var(--secondary-font-color);
}

.footerMenu {
  display: flex;
  flex-flow: column;
  flex-direction: column;
  row-gap: 10px;
  padding-top: var(--content-padding);
  margin: var(--small-padding) var(--content-padding);
  border-top: 2px solid var(--secondary-font-color);
}

.iconBtn {
  display: inline-flex;
  align-items: center;
  border-radius: 50%;
  padding: 0.3em;
  height: 1.8em;
  width: 1.8em;
  background-color: var(--default-background-color);
}

.icon {
  fill: var(--default-font-color) !important;
  opacity: 1 !important;
}

.iconCSV {
  float: right;
  display: inline;
  border-radius: 50%;
  padding: 0.3em;
  height: 1.1em;
  width: 1.1em;
  background-color: var(--default-background-color);
  fill: var(--default-font-color) !important;
  opacity: 1 !important;
}

.infoIcon {
  width: 1em;
  height: 1em;
  margin-left: 0.5em;
  margin-right: 0.5em;
  position: relative;
}

.hover {
  color: var(--secondary-font-color);
  top: 36px !important;
  left: -8px !important;
  background-color: var(--second-tertiary-background-color);
  padding: 0.5em;
  width: 160px;
  border-radius: 0.5em;
}

.margin {
  margin-left: 3px;
  margin-right: 3px;
}

.margin10 {
  margin-left: 10px;
  margin-right: 10px;
}

.filters {
  display: flex;
  margin-bottom: 0.5em;
  align-items: center;
}

.filters > * {
  margin-right: 0.5em;
}

.filters .label {
  display: flex;
  align-items: center;
  margin-right: 0.5em;
}

.filters input {
  line-height: 1em;
  height: 1.5em;
}

.filters .selectComment,
.filters .selectComponent {
  text-align: left;
  white-space: nowrap;
  border: 1px solid var(--secondary-font-dimmed-color);
}

.filters .selectComment {
  flex: 0 0 20ch;
}

.filters .selectComponent {
  flex: 0 0 35ch;
}

.lastUpdated {
  display: flex;
  align-items: center;
  text-align: left;
  color: var(--primary-font-color);
  margin-bottom: var(--small-padding);
}

.lastUpdated button {
  margin-right: var(--small-padding);
}

.floatRight {
  float: right;
  margin: 3px;
}

.floatLeft {
  float: left;
}

.bold {
  font-weight: bold;
  color: var(--secondary-font-color);
}

.label {
  display: flex;
  align-items: center;
  font-weight: bold;
  color: var(--secondary-font-color);
  text-align: left;
}

.value {
  text-align: left;
}

.contentLeft {
  display: grid;
  grid-template-columns: minmax(12em, 1fr) 2fr;
  grid-auto-rows: max-content;
  grid-row-gap: 0.5em;
  align-items: center;
  padding: 0 var(--content-padding);
}

.contentMenu .contentLeft {
  padding: 0;
  margin-bottom: var(--content-padding);
}

.contentRight {
  padding: 0 var(--content-padding);
}

.contentMenu .contentRight {
  padding: 0;
}

.contentRight textarea {
  width: 100%;
  height: calc(100% - 2em);
  min-width: 30em;
  min-height: 12ch;
  resize: none;
  background: var(--secondary-background-dimmed-color);
  color: var(--base-font-color);
  font-size: 1em;
  border-radius: 5px;
  box-sizing: border-box;
  border-radius: 3px;
  font-family: inherit;
  font-size: inherit;
  border: 1px solid var(--secondary-font-dimmed-color);
  color: var(--base-font-color);
}

.contentRight textarea:focus {
  outline: none;
  border: 1px solid var(--secondary-font-color);
}

.contentRight .textArea {
  height: calc(100% - 2.1em);
}

.mb1 {
  margin-bottom: 0.5em;
}

.inline {
  display: grid;
  grid-template-columns: repeat(2, 2fr 3fr);
  row-gap: 5px;
  grid-auto-rows: auto;
}

.cscValue {
  display: grid;
  grid-template-columns: 6fr 1fr;
  column-gap: 5px;
  grid-auto-rows: auto;
}

.input {
  width: 100%;
  box-sizing: border-box;
  border-radius: 3px;
  padding: 0.4em;
  font-family: inherit;
  font-size: inherit;
  background-color: var(--second-secondary-background-color);
  border: 1px solid var(--secondary-font-dimmed-color);
  color: var(--base-font-color);
}

.select {
  background-color: var(--second-secondary-background-color);
  color: var(--base-font-color);
  text-align: left;
  border-radius: 0.2em;
}

.is-open {
  outline: none;
  border: 1px solid var(--secondary-font-color);
}

.footerRight {
  margin-left: auto;
}

.footerRightMenu {
  display: flex;
  flex-direction: column;
  row-gap: 10px;
  align-items: end;
}

.footerMenu .checkboxText {
  flex-wrap: wrap;
}

.checkboxText {
  display: flex;
  align-items: center;
}

.jira .checkboxText {
  margin-bottom: var(--small-padding);
}

.checkboxText > *:not(:last-child) {
  margin-right: 0.5em;
}

.checkboxText > button {
  text-align: right;
}

.radioText {
  display: flex;
  align-items: center;
  margin-bottom: var(--small-padding);
}

.textInput {
  margin-bottom: var(--small-padding);
}

.issueIdInput {
  width: 80px;
}

.rangeDateOnly {
  width: 11ch;
}

.dateTimeRangeStyle {
  margin-bottom: 0;
}

.dateTimeRangeStyle :global(.rdtPicker) {
  left: -176px;
  min-width: 250px;
}

.dateTimeSingularStyle {
  width: 14em;
}

th.tableHead {
  color: var(--highlighted-font-color);
  padding: var(--small-padding);
  font-weight: bold;
}

.iconFill {
  fill: var(--default-font-color);
}

.modalFooter {
  display: flex;
  justify-content: space-between;
  margin-top: 1em;
}

.levelIcon {
  width: 20px;
  height: 20px;
  margin: 3px;
  display: inline-flex;
  vertical-align: middle;
}

.spinnerIcon {
  height: var(--font-size-small);
  width: var(--font-size-small);
  margin-left: var(--small-padding);
}

.divExportBtn {
  margin-left: auto;
}

.inputError {
  border-color: var(--status-alert-color);
}

.incidentTimeTypeContainer {
  display: flex;
  align-items: center;
  margin-bottom: var(--small-padding);
}

.clearDateIcon {
  display: flex;
  align-items: center;
  padding: 0.25em;
}
.clearDateIcon > * {
  width: 1.5em;
  height: 1.5em;
}

.footer .attachedFiles {
  display: flex;
  align-items: center;
  text-align: left;
  margin-bottom: var(--small-padding);
}

.buttonWraper {
  display: inline-block;
  margin: 0 0.25em 0.25em 0;
}

.footer .attachedFiles .fileButton {
  display: flex;
  align-items: center;
}

.footer .attachedFiles .fileButton > .downloadIcon {
  width: 1em;
  height: auto;
  margin-right: 0.25em;
  fill: var(--default-active-font-color);
}

.footer .attachedFiles .label {
  margin-left: 0;
  margin-right: var(--small-padding);
}

.footer .jira,
.footerMenu .jira {
  text-align: left;
  white-space: nowrap;
}

.footerMenu .jira {
  margin-bottom: var(--small-padding);
}

/* Following is related to the use of the RichTextEditor component */
.wikiMarkupText {
  white-space: pre-wrap;
  text-align: left;
  overflow-x: auto;
  position: relative;
}

.wikiMarkupText:has(+ .expandBtn) {
  max-height: 5em;
  overflow-y: hidden;
}

.wikiMarkupText:has(+ .expandBtn:not(:checked))::before {
  content: '';
  position: absolute;
  height: 1em;
  width: 100%;
  bottom: 0;
  pointer-events: none;
  background: linear-gradient(to bottom, transparent, var(--second-primary-background-color));
}

tr:hover .wikiMarkupText:has(+ .expandBtn:not(:checked))::before {
  background: linear-gradient(to bottom, transparent, var(--second-tertiary-background-color));
}

/* .wikiMarkupText:has(+ .expandBtn) {
  overflow-y: hidden;
  max-width: 70em;
} */

.wikiMarkupText h1,
.wikiMarkupText h2,
.wikiMarkupText h3,
.wikiMarkupText h4,
.wikiMarkupText h5,
.wikiMarkupText h6 {
  margin: calc(var(--small-padding) * 0.5) 0;
}

.wikiMarkupText a {
  color: var(--link-font-color);
}

.wikiMarkupText a:hover,
.wikiMarkupText a:focus {
  color: var(--link-hover-font-color);
}

table.table {
  margin: 0;
  border: 0;
}

table.table th {
  position: sticky;
  top: 0;
  z-index: 1;
}

table.table tr td {
  border-bottom: 6px solid var(--second-tertiary-background-color) !important;
}

table.table tr:hover td {
  background-color: var(--second-tertiary-background-color);
}

table.table tr {
  background-color: var(--second-primary-background-color) !important;
}

.attachmentIcon {
  width: 1em;
  height: auto;
  margin-right: 0.25em;
  fill: var(--default-active-font-color);
}

.expandBtn {
  font-size: var(--font-size-smaller);
  color: white;
  appearance: none;
  border: 1px solid white;
  padding: 0.2em;
  border-radius: 0.25em;
  cursor: pointer;
  margin: 0;
  margin-top: 0.25em;
}

.expandBtn:hover {
  background-color: #ccc;
}

.expandBtn::before {
  content: '⊕ Expand';
}

.expandBtn:checked::before {
  content: '⊖ Collapse';
}

.wikiMarkupText:has(+ .expandBtn:checked) {
  max-height: none;
}

.inputGroup {
  display: flex;
}

.inputGroup > :first-child {
  flex-grow: 1;
}

.timeOfIncidentInputContainer {
  display: flex;
}

.timeOfIncidentInput:hover::placeholder {
  color: #c3c3c3;
}

.hiddenButtons {
  display: none;
}

:global(.rdtPicker) button.rdtControlsButton {
  display: flex;
  align-items: center;
  justify-content: center;
  --button-margin: 0.75em;
  width: calc(100% - 2 * var(--button-margin));
  padding: 0.25em;
  background-color: var(--default-background-color);
  color: var(--default-font-color);
  margin: 0 var(--button-margin);
}

:global(.rdtPicker) button.rdtControlsButton:hover {
  background-color: var(--default-active-background-color);
  color: var(--default-active-font-color);
}

:global(.rdtPicker) button.rdtControlsButton svg {
  width: 1em;
  height: 1em;
}

.obsDayTableHeader {
  display: flex;
  align-items: center;
}

@container content (min-width: 1260px) {
  .dateTimeRangeStyle :global(.rdtPicker) {
    left: 184px;
    top: -161px;
  }
}
